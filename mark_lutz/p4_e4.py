"""
1. Ключевые аргументы. Измените функцию adder из упражнения 2, чтобы она принимала и выполняла суммирование/конкатенацию
трех аргументов: def adder (good, bad, ugly). Снабдите каждый аргумент стандартным значением и поэкспериментируйте
с вызовом функции в интерактивной подсказке. Попробуйте передать один, два, три и четыре аргумента.
Работает ли вызов adder (ugly=l, good=2)? Почему?
2. Затем обобщите новую функцию adder с целью приема и выполнения суммирования/конкатенации для произвольного
количества ключевых аргументов. Похожая работа делалась в упражнении 3, но здесь необходимо проходить по словарю,
а не по кортежу. (Подсказка: метод dict.keys возвращает список, по которому можно проходить с помощью цикла for
или while, но для индексации в Python З.Х не забудьте поместить его внутрь вызова list;
также может помочь метод dict.values.)
"""


def adder(good=1, bad=2, ugly=3):
    return good + bad + ugly


print(adder())
print(adder(8))
print(adder(ugly=4))
print(adder(3, 5))